---
date_added: 2019-07-15
title: WF-CS01
category: cover
type: Curtain Switch
standard: eu
image: /assets/device_images/WF-CS01.webp
template9: '{"NAME":"ShutterSwitch","GPIO":[544,227,289,34,226,33,0,0,32,224,290,225,288,0],"FLAG":0,"BASE":18,"CMND":"Rule1 1"}'
link: https://www.amazon.de/dp/B07PNV9XKQ/
link2: https://www.aliexpress.com/item/32983943702.html
chip: TYWE3S
flash: serial
---

Added a rule to get it working properly:
```console
Rule1 
	on Power1#State=0 do LEDPower1 0 endon 
	on Power1#State=1 do LEDPower1 1 endon 
	on Power2#State=0 do LEDPower2 0 endon 
	on Power2#State=1 do LEDPower2 1 endon
```
This combines to:
```console
Rule1 on Power1#State=0 do LEDPower1 0 endon on Power1#State=1 do LEDPower1 1 endon on Power2#State=0 do LEDPower2 0 endon on Power2#State=1 do LEDPower2 1 endon
```

Added some commands too:
```console
InterLock 1,2,3 # lock the relays, only one relay can be on
InterLock    on # switch interlocking on
PowerOnState  0 # keep relay(s) OFF after power up
PowerRetain   0 # don't retain states
SetOption1    1 # restrict button-multipress to single, double and hold actions
LedPower 0	# disables power LED
SetOption31 1	# optional, prevents LED from flashing if WiFi or MQTT are disconnected
SetOption80 1	# enable ShutterMode
Pulsetime3 1 	# this button is used to stop the relays. It can be turned off immediatly
```

This rule will allow you to toggle the LEDs by long-pressing the middle button:

```console
Backlog Rule2 ON button3#state=3 DO power4 2 ENDON; Rule2 1
```

Now you must configure the durations : [doc here](https://tasmota.github.io/docs/Blinds-and-Shutters/)

This module is based on the Tuya [TYWE3S](https://tasmota.github.io/docs/Pinouts/#tywe3s) and TuyaConvert isn't working anymore (but one can always try..)
![20190918_122058](https://user-images.githubusercontent.com/31405979/66112354-f6e70300-e5ca-11e9-9378-095c42e2bfbc.jpg)

The inside of this module looks like this:
![20190918_121854](https://user-images.githubusercontent.com/31405979/66110590-6529c680-e5c7-11e9-9a74-aba86d0bd7b4.jpg)
![20190918_122039](https://user-images.githubusercontent.com/31405979/66110678-8f7b8400-e5c7-11e9-9695-5e017713622e.jpg)

And the processor boards:
![20190918_122039](https://user-images.githubusercontent.com/31405979/66110678-8f7b8400-e5c7-11e9-9695-5e017713622e.jpg)
![20190918_122129](https://user-images.githubusercontent.com/31405979/66110733-a621db00-e5c7-11e9-9076-51f1623b90a7.jpg)

The device has a separate MCU on board which connects to the TYWE3s module via Rx and Tx.
![20190918_122059](https://user-images.githubusercontent.com/31405979/66112156-9d7ed400-e5ca-11e9-8137-892644c0e513.jpg)

To be able to flash the device one needs to make 5 connections and CUT the RxD0 line
Important: Cutting the Line in my model resulted in the middle button not working afterwards,
so after the flash I had to resolder the cut connection:
![20190918_121926](https://user-images.githubusercontent.com/31405979/66110791-c94c8a80-e5c7-11e9-896c-1505e7ec5917.png)


Flashing can be done in several ways: Arduino IDE, VSCode, Platformio, ESP8266Flasher, etc.

>  !!!  BE CAREFUL: always use 3,3 volts for power, NOT 5 volts, and DISCONNECT THE MAINS COMPLETELY while working on the device  !!!

The WF-WS01/02/03 have the same boards inside and can be flashed the same way.Â 


## Alternate flash method

Unsolder the chip using a [heat gun](https://aliexpress.com/item/32849876144.html) and use [this CP210X based board](https://aliexpress.com/item/32991118728.html) to flash using NodeMCU PyFlasher. Heat the chip sides and push it upwards gently from underneath using tweezers on the label.
Had a single problem using this method, one GPIO did not resolder correctly and one LED stayed red. Heated again and applied some solder.

> !!! BE CAREFUL: do not tear the contact pads from the board. It will be really hard to make the board work again afterwards.
