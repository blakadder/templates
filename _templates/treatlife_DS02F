---
date_added: 2021-07-14
title: Treatlife 1.5A 4 Speed Ceiling 
model: DS02F
image: /assets/images/treatlife_DS02F.jpg
template9: '{"NAME":"DS02F","GPIO":[0,2272,0,2304,0,0,0,0,0,0,0,0,0,0],"FLAG":0,"BASE":54,"CMND":"TuyaMCU 11,1|SO97 1|SO68 0"}' 
link: https://www.amazon.com/gp/product/B08P5D3ZKW
link2: 
mlink: https://www.treatlife.tech/collections/smart-dimmer-switch/products/smart-ceiling-fan-control-and-light-dimmer-switch-neutral-wire-needed-treatlife-single-pole-wi-fi-light-switch-fan-speed-control-works-with-alexa-google-assistant-schedule-remote-control
flash: replace
chip: WB3S
category: switch
type: Fan Switch
standard: us
---
This is not for the feint of heart, this device comes with a custom Tuya chip, which is not ESP based. Luckily, the main board has the appropriate footprint for an ESP-12F. Instructions for a similar device can be found [here](https://community.home-assistant.io/t/treatlife-dual-outlet-indoor-dimmer-plug-wb3s-to-esp-12-transplant/256798)

These commands are applied together with the template:

```console
backlog SetOption97 1; tuyamcu 11,1; SetOption59 1; SetOption68 0
```
These commands set the baud rate to 115200, bind the Tasmota software to the appropriate channel for control of the switch, set PWM to a single light, and adds an additional topic for state. More information can be found in the Tasmota TuyaMCU guide. 

Set up a rule to report speed state based on information from the TuyaMCU

```console
Backlog Rule1 on tuyareceived#dptype4id3 do publish stat/%topic%/speed %value% endon; Rule1 1
```

This will monitor TuyaMCU messages for changes to the speed of the fan and publish them to MQTT. Additional information can be found in the TuyaMCU Guide as well as the DS02S guide.


## Home Assistant 
### Using speed percentage
```yaml
{% raw %}fan:
  - platform: mqtt
    name: "TreatLife Fan"
    state_topic: "stat/%topic%/RESULT"
    state_value_template: "{{ value_json.POWER1 }}"
    command_topic: "cmnd/%topic%/POWER1"
    payload_on: "ON"
    payload_off: "OFF"
    percentage_state_topic: "stat/%topic%/speed"
    percentage_command_topic: "cmnd/%topic%/tuyasend4"
    percentage_command_template: "3,{{ value }}"
    speed_range_max: 2
    availability_topic: "tele/%topic%/LWT"
    payload_available: Online
    payload_not_available: Offline{% endraw %}
```
### Using presets
```yaml
{% raw %}fan:
  - platform: mqtt
    name: "TreatLife Fan"
    state_topic: "stat/%topic%/RESULT"
    state_value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/%topic%/POWER1"
    payload_on: "ON"
    payload_off: "OFF"
    preset_mode_state_topic: "stat/%topic%/speed"
    preset_mode_command_topic: "cmnd/%topic%/TuyaSend4"
    preset_mode_command_template: "3,{% if value == 'low' %}1{% elif value == 'medium' %}2{% elif value == 'high' %}3{% endif %}"
    preset_mode_value_template: "{% if value == '1' %}low{% elif value == '2' %}medium{% elif value == '3' %}high{% endif %}"
    preset_modes:
      - "low"
      - "medium"
      - "high"
    availability_topic: "tele/%topic%/LWT"
    payload_available: Online
    payload_not_available: Offline{% endraw %}
```
