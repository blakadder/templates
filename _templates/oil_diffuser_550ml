---
date_added: 2019-11-06
title: Wood Grain 550ML
model: KCL-M1801C_M
category: misc
type: Aroma Diffuser
standard: global
template9: '{"NAME":"MY-KCL01800FB","GPIO":[0,2272,0,2304,0,0,0,0,0,0,0,0,0,0],"FLAG":0,"BASE":54}'
link: https://www.aliexpress.com/item/32983725049.html
image: https://user-images.githubusercontent.com/5904370/57200999-010cc300-6f93-11e9-8fbe-ad02435e367f.png
link2: 
---
<div style="float:right; margin:10px; text-align: center;"><img style="width:50px" src="/assets/images/blakapproved.png"> <br><b> by <a href="https://blakadder.com">blakadder</a></b></div>

Please read [TuyaMCU](https://tasmota.github.io/docs/TuyaMCU) to understand the terminology and configuration process.

Flashed via serial by using [TYWE3S](https://tasmota.github.io/docs/Pinouts/#tywe3s) pins. Might work with Tuya Convert.

Tuya Product ID: GQxEe5orh45cMgA61.0 

PCB code: KCL-M1801C_M 2018_11_12 V5.0

## Functions
`dpID 2` device mode: `0 = off / 1 = continuous / 2 = intermittent / 3 = timer`    
`dpID 4` set timer (180 min max) *not needed with Tasmota, there's a Timer function*    
`dpID 6` light control: `0 = off / 1 = rgb cycle / 2 = white / 3 = single color`   
`dpID 7` led dimmer    
`dpID 8` led color: `14 char value in hex` (can define only RGB and send HSV value as max: `RRGGBBffff6464`)    
`dpID 9` error notification: `70 = ok / 1 = error`  
`dpID 101` mist strength: `0 = low / 1 = high`   

> I found the built in buzzer very annoying and desoldered it for quieter operation!

## Configuration

After applying the template and configuring Wi-Fi and MQTT issue

```console
Backlog TuyaMCU 21,7; TuyaMCU 24,8; TuyaMCU 11,111; TuyaMCU 11,112; TuyaMCU 63,2; TuyaMCU 62,6; TuyaMCU 61,101;
```
After a restart issue additional configurations:

```console
Backlog TuyaRGB 3; DimmerRange 1,255; LedTable 0; TuyaEnumList 1,1; TuyaEnumList 2,3; TuyaEnumList 3,3; Rule0 1
```

Since fan and light control are type4 dpId's they cannot be directly mapped to a relay. Instead we created two dummy relays (`TuyaMCU 11,111` and `TuyaMCU 13,113`) which are then controlled using rules that convert relevand dpId statuses (`dpId2` for fan power and `dpId6` for light). Last rules takes the error (`dpId9`) states and sends them to a separate error topic which can be use in Home Automation systems.

```console
Rule1 
on power1#state do tuyaenum3 %value% endon
on power2#state=0 do tuyaenum2 0 endon on power2#state=1 do tuyaenum2 3 endon
on tuyareceived#dptype5id9 do publish stat/%topic%/error %value% endon 
on tuyareceived#dptype4id101==1 do publish stat/%topic%/fanmode high endon on tuyareceived#dptype4id101==0 do publish stat/%topic%/fanmode low endon
on tuyareceived#dptype4id6==3 do power2 1 endon on tuyareceived#dptype4id2==3 do tuyaenum3 1 endon
on tuyaenum3#data==0 do power1 0 endon
on tuyareceived#dptype4id2!=0 do power1 1 endon 
on scheme#data!=0 do backlog0 scheme 0; tuyaenum2 1 endon
```

Label webUI buttons:
```console
Backlog WebButton1 Fan; WebButton2 Light; FriendlyName1 Diffuser Fan; FriendlyName2 Diffuser Light
```

### What you get
- `Power1` is device power status (dummy relay uses rules to control TuyaEnum3)
- `Power2` is a standard RGB light (power state uses rules to control TuyaEnum2)
- `TuyaEnum3` is fan power and modes
- `TuyaEnum2` is light power and modes
- `TuyeEnum1` is mist strength status and control

## Home Assistant configuration

**Make sure `Rule1` is implemented and active before proceeding.**

Use blueprint import button then create an automation from the blueprint which will send MQTT discovery payloads to Home Assistant. New entities should appear under the same Device Card in Tasmota integration.

<a href="https://my.home-assistant.io/redirect/blueprint_import/?blueprint_url=https://github.com/tasmota/blueprints/blob/main/discovery-tuya_diffuser_fan_and_error_sensor.yaml" title="Import Blueprint"><img loading="lazy" src="/assets/blueprint_import.svg"></a> &emsp; [GitHub Link](https://github.com/tasmota/blueprints/blob/main/discovery-tuya_diffuser_fan_and_error_sensor.yaml)

### Editing configuration.yaml

```yaml
{% raw %}fan:
  - platform: mqtt
    name: "Diffuser"
    state_topic: "stat/%topic%/RESULT"
    state_value_template: "{% if value_json.POWER1 is defined %}{{ value_json.POWER1 }}{% endif%}"
    command_topic: "cmnd/%topic%/POWER1"
    preset_modes:
    -  "high"
    -  "low"
    preset_mode_state_topic: "stat/%topic%/fanmode"
    preset_mode_command_topic: "cmnd/%topic%/tuyaenum1"
    preset_mode_command_template: '{{ 1 if value == "high" else 0 }}'
    availability_topic: "tele/%topic%/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"{% endraw %}

binary_sensor:
  - platform: mqtt
    name: "Difuser Error"
    state_topic: "stat/%topic%/error"
    value_template: {% raw %}"{{ 'ON' if value != '0X00' else 'OFF' }}"{% endraw %}
    device_class: problem
    availability_topic: "tele/%topic%/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
```

## PCB
[![IMG-20190505-230944.jpg](https://i.postimg.cc/sDmp2YqR/IMG-20190505-230944.jpg)](https://postimg.cc/WhDDWks9)
