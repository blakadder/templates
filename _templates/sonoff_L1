---
date_added: 2019-08-08
title: Sonoff L1
category: light
type: LED Strip
standard: global
mlink: https://sonoff.tech/product/wifi-smart-lighting/l1-smart-strip-light
link: https://itead.cc/product/sonoff-l1-smart-led-light-strip/
image: /assets/images/sonoff_L1.jpg
template: '{"NAME":"SonoffL1","GPIO":[0,148,0,149,0,0,0,0,0,56,0,0,0],"FLAG":0,"BASE":70}' 
link2: https://www.banggood.com/SONOFF-L1-Dimmable-IP65-2M-5M-Smart-WiFi-RGB-LED-Strip-Light-Kit-Work-With-Amazon-Alexa-Google-Home-p-1396771.html
link4: https://www.alza.de/sonoff-l1-5m-d5711526.htm
link3: https://www.aliexpress.com/item/4001294082557.html
---

## Serial Flashing
Please see the [Hardware Preparation](https://tasmota.github.io/docs/Getting-Started/#hardware-preparation) page for general instructions.

As always, you need to access the serial interface. The **four serial pins** (3V3, Rx, Tx, GND) are available at the back of the PCB and can be easily identified. 

![](https://github.com/Maurits28/templates/blob/Maurits28-patch-1/assets/images/SonoffL1-1.jpeg?raw=true)

Programming the Sonoff L1 is difficult because there is no on-board-button connected to GPIO0 and GND. As with all ESP8266 modules pulling GPIO0 to GND is needed to put the chip in programming mode. You need to **connect GPIO0 and GND** during power up.

GND can be found on at the back (same serial pin as you connect your serial programmer to). *GPIO0* can be accessed with a small pin needle or wire, it is the second pin from the right. See picture below:

![](https://user-images.githubusercontent.com/1399796/71555640-82d3c400-2a2e-11ea-99d6-3bb57a98ebb0.png)
![](https://github.com/Maurits28/templates/blob/Maurits28-patch-1/assets/images/SonoffL1-2.jpeg?raw=true)

## General remark
The controller housing indicates that the arrows of the LED strip and the housing should match, but arrows are not always visible. They need to be connected with both sides 'up':

![](https://github.com/Maurits28/templates/blob/Maurits28-patch-1/assets/images/SonoffL1-4.jpeg?raw=true)


If you want to control MusicMode, Music Sensitivity and Speed from HA, create the below rules on the device and import this blueprint in HA and create an automation based on it.

<a href="https://my.home-assistant.io/redirect/blueprint_import/?blueprint_url=https://github.com/tasmota/blueprints/blob/main/discovery-sonoff_l1.yaml" title="Import Blueprint"><img loading="lazy" src="/assets/blueprint_import.svg"></a> &emsp; [GitHub Link](https://github.com/tasmota/blueprints/blob/main/discovery-sonoff_l1.yaml)

```
Rule2 on var1#State do Backlog L1MusicSync %value%,x,x; Event checkvar=%var1% endon on Event#checkvar=1 do Publish %topic%/musicsync ON endon on Event#checkvar=0 do Publish %topic%/musicsync OFF endon on var2#State do L1MusicSync 1,%value%,x endon on var2#state do Backlog L1MusicSync; Publish %topic%/sensitive %value% endon on var3#State do L1MusicSync 1,x,%value% endon on var3#State do Backlog L1MusicSync; Publish %topic%/speed %value% endon
```
```
Rule2 1
```
```
Backlog Rule3 on L1MusicSync#Mode do Publish %topic%/musicsync %value% endon on L1MusicSync#Sensitive do Publish %topic%/sensitive %value% endon on L1MusicSync#Speed do Publish %topic%/speed %value% endon; Rule3 1
```
